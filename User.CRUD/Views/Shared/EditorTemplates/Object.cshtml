@{ Layout = "~/Views/Shared/EditorTemplates/_Layout.cshtml"; }

@if (ViewData.TemplateInfo.TemplateDepth == 2)
{
    <hr />
}

@if (ViewData.TemplateInfo.TemplateDepth > 3)
{
    if (Model == null)
    {
        <text>ViewData.ModelMetadata.NullDisplayText</text>
    }
    else
    {
        <text>ViewData.ModelMetadata.SimpleDisplayText</text>
    }
}
else
{
    foreach (var prop in ViewData.ModelMetadata.Properties.Where(metadata => metadata.ShowForEdit
        // && metadata.ModelType != typeof(System.Data.EntityState) // Dependency on Entity Framework present in Microsoft.Web.Mvc template
        //&& !metadata.IsComplexType
        && !ViewData.TemplateInfo.Visited(metadata)))
    {
        if (prop.PropertyName != "Id")
        {
            if (prop.HideSurroundingHtml)
            {
                @Html.Editor(prop.PropertyName)
            }
            else if (prop.ModelType.Name == "Boolean")
            {
                string label = Html.Label(prop.PropertyName).ToHtmlString();
                <label class="input-control checkbox" onclick="">
                    @Html.Editor(prop.PropertyName) @Html.ValidationMessage(prop.PropertyName)
                    @if (!string.IsNullOrEmpty(label))
                    {
                        <span class="helper">@Html.Label(prop.PropertyName)</span>
                    }
                </label>
            }
            else
            {
                string label = Html.Label(prop.PropertyName).ToHtmlString();
                if (!string.IsNullOrEmpty(label))
                {
                    <div class="editor-label">@Html.Label(prop.PropertyName)</div>
                }

                <div class="input-control  @(prop.DataTypeName == "MultilineText" ? "textarea" : "text")" data-propertyname=" @prop.PropertyName ">
                    @Html.Editor(prop.PropertyName) @Html.ValidationMessage(prop.PropertyName)
                </div>
            }
        }
    }
}